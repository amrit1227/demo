# This is a basic workflow to help you get started with Actions

name: test repos

# Controls when the workflow will run
on:

  workflow_dispatch:

    # Steps represent a sequence of tasks that will be executed as part of the job
jobs:
  example_job:
    runs-on: ubuntu-latest
    steps:
      - name: Run a command and capture the output
        id: plan
        run:  |
              output=$(cat <<EOF
              Changes to Outputs:
              ~ auth0_prompt_custom_text = {
                  ~ login = {
                      ~ body     = jsonencode( # whitespace changes
                            {
                                login = {
                                    alertListTitle                = "Alerts"
                                    buttonText                    = "Continue"
                                    editEmailText                 = "Edit"
                                    emailPlaceholder              = "Email address"
                                    federatedConnectionButtonText = "Continue with ${connectionName}"
                                    footerLinkText                = "Sign up"
                                    footerText                    = "Don't have an account?"
                                    forgotPasswordText            = "Forgot password?"
                                    invitationDescription         = "Log in to accept ${inviterName}'s invitation to join ${companyName} on ${clientName}."
                                    invitationTitle               = "You've Been Invited!"
                                    logoAltText                   = "${companyName}"
                                    passwordPlaceholder           = "Password"
                                    separatorText                 = "Or"
                                    signupActionLinkText          = "${footerLinkText}"
                                    signupActionText              = "${footerText}"
                                    title                         = "Welcome"
                                    usernamePlaceholder           = "Username or email address"
                                }
                            }
                        )
                        id       = "login::en"
                        # (2 unchanged elements hidden)
                    }
                }
            
              You can apply this plan to save these new output values to the Terraform
              state, without changing any real infrastructure.
               EOF)
              GITHUB_STEP_SUMMARY="${GITHUB_STEP_SUMMARY}${output}"
              echo "${GITHUB_STEP_SUMMARY}"

      - name: Replace special character in the output
        run: |
          original_output="${{ steps.plan.outputs.stdout }}"
          modified_output=$(echo "$original_output" | sed 's/\$/-/g')
          echo "::set-output name=modified_output::$modified_output"



